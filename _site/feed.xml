<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-03-16T20:27:00+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Study Blog</title><subtitle>技术博客</subtitle><entry><title type="html">Ubuntu系统配置</title><link href="http://localhost:4000/study/2019/03/16/ubuntu.html" rel="alternate" type="text/html" title="Ubuntu系统配置" /><published>2019-03-16T20:26:45+08:00</published><updated>2019-03-16T20:26:45+08:00</updated><id>http://localhost:4000/study/2019/03/16/ubuntu</id><content type="html" xml:base="http://localhost:4000/study/2019/03/16/ubuntu.html">&lt;p&gt;1.安装系统
2.切换源&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 1.备份原来的数据源配置文件
cp /etc/apt/sources.list /etc/apt/sources.list_backup
# 2.编辑数据源配置文件
vi /etc/apt/sources.list

中科源
http://mirrors.ustc.edu.cn/help/ubuntu.html
sudo apt-get update
删除vim
sudo apt-get remove vim-common
sudo apt-get install vim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;3.安装PHP&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo add-apt-repository ppa:ondrej/php
sudo apt-get update
sudo apt-get install php7.2
根据情况安装扩展

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;4.安装git&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install git
git config --global user.name &quot;你的名字或昵称&quot;
git config --global user.email &quot;你的邮箱&quot;
ssh-keygen
cat ~/.ssh/id_rsa.pub
加入github
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;5.安装ssr&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/SAMZONG/gfwlist2privoxy.git
cd gfwlist2privoxy/
sudo mv ssr /usr/local/bin
sudo chmod +x /usr/local/bin/ssr
ssr install
修改配置
ssr config
ssr start
修改系统网络代理端口socket到1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;6.安装composer&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo curl -sS https://getcomposer.org/installer | sudo php -d detect_unicode=Off
sudo mv composer.phar /usr/local/bin/composer
cd /usr/local/bin/
sudo chmod a+x composer
sudo composer self-update
sudo composer config -g repo.packagist composer https://packagist.laravel-china.org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;7.安装docker&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
docker ce
https://docs.docker.com/install/linux/docker-ce/ubuntu/

compose:
https://docs.docker.com/compose/install/

添加Docker用户组，避免总是sudo输入
sudo groupadd docker   #
添加一个新的docker用户组
sudo gpasswd -a username docker   
#添加当前用户到docker用户组里
sudo service docker restart   
#重启Docker后台监护进程
docker version   
#重启之后，尝试一下，是否生效
sudo reboot   
#若还未生效，则系统重启，则生效
docker cmd --help  #
查看命令的详细使用 例如：docker run --help
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">1.安装系统 2.切换源 `````` 1.备份原来的数据源配置文件 cp /etc/apt/sources.list /etc/apt/sources.list_backup 2.编辑数据源配置文件 vi /etc/apt/sources.list</summary></entry><entry><title type="html">ssl证书生成</title><link href="http://localhost:4000/study/2019/03/16/nginx-ssl.html" rel="alternate" type="text/html" title="ssl证书生成" /><published>2019-03-16T20:19:45+08:00</published><updated>2019-03-16T20:19:45+08:00</updated><id>http://localhost:4000/study/2019/03/16/nginx-ssl</id><content type="html" xml:base="http://localhost:4000/study/2019/03/16/nginx-ssl.html">&lt;p&gt;创建证书&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1.创建服务器证书密钥文件 server.key：
openssl genrsa -des3 -out server.key 1024
输入密码，确认密码，自己随便定义，但是要记住，后面会用到。
2.创建服务器证书的申请文件 server.csr
openssl req -new -key server.key -out server.csr
输出内容为：
Enter pass phrase for root.key: ← 输入前面创建的密码 
Country Name (2 letter code) [AU]:CN ← 国家代号，中国输入CN 
State or Province Name (full name) [Some-State]:BeiJing ← 省的全名，拼音 
Locality Name (eg, city) []:BeiJing ← 市的全名，拼音 
Organization Name (eg, company) [Internet Widgits Pty Ltd]:MyCompany Corp. ← 公司英文名 
Organizational Unit Name (eg, section) []: ← 可以不输入 
Common Name (eg, YOUR name) []: ← 此时不输入 
Email Address []:admin@mycompany.com ← 电子邮箱，可随意填
Please enter the following ‘extra’ attributes 
to be sent with your certificate request 
A challenge password []: ← 可以不输入 
An optional company name []: ← 可以不输入
4.备份一份服务器密钥文件
cp server.key server.key.org
5.去除文件口令
openssl rsa -in server.key.org -out server.key
6.生成证书文件server.crt
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">创建证书</summary></entry><entry><title type="html">使用github pages搭建blog</title><link href="http://localhost:4000/study/2019/03/16/how-to-create-blog.html" rel="alternate" type="text/html" title="使用github pages搭建blog" /><published>2019-03-16T16:03:45+08:00</published><updated>2019-03-16T16:03:45+08:00</updated><id>http://localhost:4000/study/2019/03/16/how-to-create-blog</id><content type="html" xml:base="http://localhost:4000/study/2019/03/16/how-to-create-blog.html">&lt;p&gt;创建Github Repository
修改Settings Repository name为xxx.github.io
修改GitHub Pages Source为Master分支后可以看到blog地址生成&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install ruby-full build-essential zlib1g-dev
echo '# Install Ruby Gems to ~/gems' &amp;gt;&amp;gt; ~/.bashrc
echo 'export GEM_HOME=&quot;$HOME/gems&quot;' &amp;gt;&amp;gt; ~/.bashrc
echo 'export PATH=&quot;$HOME/gems/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc
gem install jekyll bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;安装Jekyll&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install ruby-full build-essential zlib1g-dev
echo '# Install Ruby Gems to ~/gems' &amp;gt;&amp;gt; ~/.bashrc
echo 'export GEM_HOME=&quot;$HOME/gems&quot;' &amp;gt;&amp;gt; ~/.bashrc
echo 'export PATH=&quot;$HOME/gems/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc
gem install jekyll bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;创建新的blog&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new myblog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;启动Jekyll&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll serve
启动后127.0.0.1：4000查看
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;修改_config.yml文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;修改相关数据
baseurl改为github的地址xxx.github.io
重启jekyll可使配置生效
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;创建blog&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;在_posts文件下面创建类似模板文件
categories为大类别,会自动在_site下生成和categories的值的同名文件目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">创建Github Repository 修改Settings Repository name为xxx.github.io 修改GitHub Pages Source为Master分支后可以看到blog地址生成</summary></entry></feed>